buildscript {
    repositories {
        maven { url = 'https://files.minecraftforge.net/maven' }
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '3.+', changing: true
    }
}
apply plugin: 'net.minecraftforge.gradle'
// Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.
apply plugin: 'eclipse'
apply plugin: 'maven-publish'

version = "${project.mc_version}-${project.mod_version}"
group = "${project.package_group}" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "${project.mod_name}"

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.

minecraft {
    mappings channel: project.mappings_channel, version: "${project.mappings_version}-${project.mappings_mc_version}"
    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    runs {
        client {
            workingDirectory project.file('run')
            property 'forge.logging.console.level', 'info'
            mods {
                samhain {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')
            property 'forge.logging.console.level', 'info'
            mods {
                samhain {
                    source sourceSets.main
                }
            }
        }
    }
}

dependencies {
    minecraft "net.minecraftforge:forge:${project.mc_version}-${project.forge_version}"
}

// Example for how to get properties into the manifest for reading by the runtime..
jar {
    manifest {
        attributes([
            "Specification-Title": archivesBaseName,
            "Specification-Vendor": "Mnesikos",
            "Specification-Version": "${project.mod_version}",
            "Implementation-Title": archivesBaseName,
            "Implementation-Version": "${project.mod_version}",
            "Implementation-Vendor" :"Mnesikos",
            "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}